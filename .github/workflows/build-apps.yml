name: Build apps
on: [push]
env:
  ENV_FILE: ${{ startsWith(github.ref, 'refs/tags/') && !contains(github.ref_name, 'beta') && 'production.env' || 'preview.env' }}
jobs:
  linux:
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./app
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: app/pubspec.yaml
      - name: Clean cache
        run: flutter pub cache clean -f
      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev libcurl4-openssl-dev libmpv-dev mpv libayatana-appindicator3-dev
      - run: flutter build linux --dart-define-from-file=${ENV_FILE}
      - name: Prepare artifacts
        run: |
          mkdir ~/artifacts
          7z a ~/artifacts/release.zip ./build/linux/x64/release/bundle/*
      - uses: actions/upload-artifact@v4
        with:
          name: pikatorrent-linux
          path: ~/artifacts/

  linux-arm64:
    runs-on: ubuntu-24.04-arm
    defaults:
      run:
        working-directory: ./app
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: master # channel stable does not support arm64 for now
          flutter-version-file: app/pubspec.yaml
      - name: Clean cache
        run: flutter pub cache clean -f
      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev libcurl4-openssl-dev libmpv-dev mpv libayatana-appindicator3-dev
      - run: flutter build linux --dart-define-from-file=${ENV_FILE}
      - name: Prepare artifacts
        run: |
          mkdir ~/artifacts
          7z a ~/artifacts/release.zip ./build/linux/arm64/release/bundle/*
      - uses: actions/upload-artifact@v4
        with:
          name: pikatorrent-linux-arm64
          path: ~/artifacts/

  windows:
    runs-on: windows-2022
    env:
      # Workaround for https://gitlab.kitware.com/cmake/cmake/-/issues/25936
      TRANSMISSION_PREFIX: ${{ github.workspace }}/transmission-prefix
      VCPKG_MANIFEST_DIR: ${{ github.workspace }}/app
    defaults:
      run:
        working-directory: ./app
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: ${{ github.workspace }}/app/vcpkg
      - name: Set up Flutter
        # yq is not installed on windows on v2
        uses: subosito/flutter-action@v2.18.0
        with:
          channel: stable
          flutter-version-file: app/pubspec.yaml
      - name: Clean cache
        run: flutter pub cache clean -f
      - run: flutter build windows --dart-define-from-file=%ENV_FILE%
      - name: Build msix
        run: dart run msix:create --store --windows-build-args="--dart-define-from-file=%ENV_FILE%"
      - name: Prepare artifacts
        run: |
          mkdir ${{ github.workspace }}/artifacts
          7z a ${{ github.workspace }}/artifacts/release.zip ./build/windows/x64/runner/Release/*
          mv build/windows/x64/runner/Release/*.msix ${{ github.workspace }}/artifacts/
      - uses: actions/upload-artifact@v4
        with:
          name: pikatorrent-windows
          path: ${{ github.workspace }}/artifacts

  macos:
    runs-on: macos-14
    env:
      # Should be same as defined in /app/macos/Runner.xcodeproj
      MACOSX_DEPLOYMENT_TARGET: 10.14
    defaults:
      run:
        working-directory: ./app
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: install dependencies
        run: brew install create-dmg

      - name: Install Apple Certificate
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.APPLE_CERTIFICATE_DEVELOPER_ID_APPLICATION_P12 }}
          p12-password: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}

      - name: Install the provisioning profile
        run: |
          mkdir -p ~/Library/Developer/Xcode/Provisioning\ Profiles
          echo "${{ secrets.APPLE_MACOS_PROVISION_PROFILE }}" | base64 --decode > ~/Library/Developer/Xcode/Provisioning\ Profiles/Github_Actions.provisionprofile

      - name: Set up vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: ${{ github.workspace }}/app/vcpkg

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: app/pubspec.yaml

      - name: Clean cache
        run: flutter pub cache clean -f

      - name: Build
        run: flutter build macos --dart-define-from-file=${ENV_FILE}

      - name: Sign
        run: ./scripts/macos/sign.sh "${{ secrets.APPLE_DEVELOPER_ID_APPLICATION }}"

      - name: Notarize & Staple
        run: |
          echo "${{ secrets.APPLE_KEY_P8 }}" | base64 --decode > ~/apple-key.p8
          ./scripts/macos/notarize.sh --key-id ${{ secrets.APPLE_KEY_ID }} --key ~/apple-key.p8 --issuer ${{ secrets.APPLE_KEY_ISSUER }}

      - name: Create .dmg
        run: |
          cd build/macos/Build/Products/Release/
          create-dmg \
            --volname "Application Installer" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "PikaTorrent.app" 200 190 \
            --hide-extension "PikaTorrent.app" \
            --app-drop-link 600 185 \
            PikaTorrent.dmg ./PikaTorrent.app

      - name: Prepare artifacts
        run: |
          mkdir ~/artifacts
          mv build/macos/Build/Products/Release/*.dmg ~/artifacts/
          mv build/macos/Build/Products/Release/release.app.zip ~/artifacts/release.app.zip

      - uses: actions/upload-artifact@v4
        with:
          name: pikatorrent-macos
          path: ~/artifacts/

  android:
    runs-on: ubuntu-24.04
    env:
      VCPKG_MANIFEST_DIR: ${{ github.workspace }}/app
    defaults:
      run:
        working-directory: ./app
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Decode android-keystore.jks
        env:
          ENCODED_STRING: ${{ secrets.ANDROID_KEY_STORE }}
        run: echo $ENCODED_STRING | base64 -di > android/android-keystore.jks

      - name: Decode key.properties
        env:
          ENCODED_STRING: ${{ secrets.ANDROID_KEY_PROPERTIES }}
        run: echo $ENCODED_STRING | base64 -di > android/key.properties

      - name: Set up vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: ${{ github.workspace }}/app/vcpkg
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: app/pubspec.yaml
      - name: Clean cache
        run: flutter pub cache clean -f
      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build

      - run: flutter build apk --dart-define-from-file=${ENV_FILE}
      - run: flutter build appbundle --dart-define-from-file=${ENV_FILE}

      - name: Prepare artifacts
        run: |
          mkdir ~/artifacts 
          cp ./build/app/outputs/flutter-apk/*.apk ~/artifacts/
          cp ./build/app/outputs/bundle/release/*.aab ~/artifacts/
      - uses: actions/upload-artifact@v4
        with:
          name: pikatorrent-android
          path: ~/artifacts/

  ios:
    runs-on: macos-14
    env:
      # Do not target simulator
      TARGET_IOS_DEVICE: true
      IPHONEOS_DEPLOYMENT_TARGET: 12 # Should be same as defined in /app/ios/Runner.
    defaults:
      run:
        working-directory: ./app
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Apple Certificate
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.APPLE_CERTIFICATE_DISTRIBUTION_P12 }}
          p12-password: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}

      - name: Install the provisioning profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ secrets.APPLE_IOS_PROVISION_PROFILE }}" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/Github_Actions.mobileprovision

      - name: Set up vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: ${{ github.workspace }}/app/vcpkg
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: app/pubspec.yaml
      - name: Clean cache
        run: flutter pub cache clean -f
      - run: flutter build ipa --dart-define-from-file=${ENV_FILE} --export-options-plist="ios/ExportOptions.plist"
      - name: Prepare artifacts
        run: |
          mkdir ~/artifacts
          mv build/ios/ipa/*.ipa ~/artifacts/pikatorrent.ipa
      - uses: actions/upload-artifact@v4
        with:
          name: pikatorrent-ios
          path: ~/artifacts/

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    needs: [linux, linux-arm64, windows, macos, android]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Desktop
        run: |
          mv pikatorrent-linux/release.zip PikaTorrent-${{ github.ref_name }}-linux-x64.zip
          mv pikatorrent-linux-arm64/release.zip PikaTorrent-${{ github.ref_name }}-linux-arm64.zip
          mv pikatorrent-windows/release.zip PikaTorrent-${{ github.ref_name }}-windows-x64.zip
          mv pikatorrent-macos/release.app.zip ${{ github.workspace }}/PikaTorrent-${{ github.ref_name }}-macos.app.zip
          mv pikatorrent-macos/*.dmg ${{ github.workspace }}/PikaTorrent-${{ github.ref_name }}-macos.dmg
      - name: Mobile
        run: |
          mv pikatorrent-android/*.apk PikaTorrent-${{ github.ref_name }}-android.apk
          mv pikatorrent-ios/*.ipa PikaTorrent-${{ github.ref_name }}-ios.ipa

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: PikaTorrent-*
